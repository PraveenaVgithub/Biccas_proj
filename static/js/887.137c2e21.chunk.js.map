{"version":3,"file":"static/js/887.137c2e21.chunk.js","mappings":"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","sources":["Components/GoogleSignin/GoogleSignIn.jsx","Components/Input_Types/email_input/InputEmail.jsx","Components/Input_Types/password_input/InputPassword.jsx","Components/backarrow/Backarrow.jsx","Components/Input_Types/name_input/InputUserName.jsx","Components/Input_Types/password_input/InputConfirmPasword.jsx","pages/components/Signup/SignUp.jsx","pages/components/firebase.js"],"sourcesContent":["import React from 'react'\r\nimport googleSignin from '../../asserts/googleSignin.png';\r\n\r\nconst GoogleSignIn = () => {\r\n  return (\r\n   <>\r\n    <h6 className='m-4 mb-2'> -- or continue with Google --</h6>\r\n  <img className='ms-4 align-content-center' src= {googleSignin} width =\" 200px\"/>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default GoogleSignIn;","import React,{useState} from 'react'\r\n\r\nconst InputEmail = ({ setEmailProp}) => {\r\n\r\n   const [email, setEmail] = useState('');\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n        setEmailProp(e.target.value);\r\n        \r\n      };\r\n\r\n  return (\r\n      <>\r\n  <div className=\"mb-2\">\r\n    <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n    <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" autoComplete=\"off\" value={email} onChange={handleEmailChange} />\r\n  </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default InputEmail;","import React, { useState } from 'react';\r\n\r\nconst InputPassword = ({ setPassword }) => {\r\n  const [password, setPasswordState] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const constraints = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$`!%*?&])[A-Za-z\\d@$`!%*?&]{8,12}$/;\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const newPassword = e.target.value;\r\n    setPasswordState(newPassword);\r\n\r\n    if (!constraints.test(newPassword)) {\r\n      setError('Password must be 8-10 characters long and include at least one lowercase letter, one uppercase letter, one numeric digit, and one special character.');\r\n    } else {\r\n      setError('');\r\n      setPassword(newPassword); // Call the prop function to set the password in the parent component\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-2\">\r\n        <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n        <input \r\n          type=\"password\" \r\n          className=\"form-control\" \r\n          id=\"password\" \r\n          name=\"password\" \r\n          autoComplete=\"off\" \r\n          value={password} \r\n          onChange={handlePasswordChange} \r\n        />\r\n      </div>\r\n      {error && <div className=\"text-danger\"style={{width:'300px',height:'55px',fontSize:'13px'}}>{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputPassword;","import React from 'react'\r\nimport {useNavigate } from 'react-router-dom';\r\nimport './backarrow.css'\r\n\r\n\r\n\r\nconst Backarrow = () => {\r\n   const navigate= useNavigate() ;\r\n      \r\n  return (\r\n    \r\n        <div>\r\n       <button className=\"iconi\" onClick={()=>{navigate(-1)}}><span className=\"material-symbols-outlined\">arrow_back</span></button>\r\n        </div>\r\n      );\r\n    \r\n    \r\n  \r\n}\r\n\r\nexport default Backarrow;","import React,{useState} from 'react'\r\n\r\nconst InputUserName = ({ setUsername}) => {\r\n    const [username, setLocalUsername] = useState('');  //for taking input val\r\n    const[error,setError]=useState(false)\r\n    const handleUsernameChange = (e) => {\r\n     \r\n        setLocalUsername(e.target.value);\r\n        setUsername(e.target.value);\r\n        \r\n        (username === '') ? (setError(true) ): (setError(false));\r\n         if (username.length <=2 || username.length > 20) {\r\n          setError(true);\r\n        } else {\r\n          setError(false);\r\n        }\r\n        \r\n      };\r\n\r\n  return (\r\n    <>\r\n <div className=\"mb-2\">\r\n    <label htmlFor=\"username\" className=\"form-label\" >Username:</label>\r\n    <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" autoComplete=\"off\" value={username} onChange={handleUsernameChange} \r\n      />\r\n  </div>\r\n       {error && <span style={{ color: 'red' }}>Username must be between 3 and 20 characters</span>}\r\n  \r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InputUserName","import React, { useState } from 'react';\r\n\r\nconst InputConfirmPassword = ({ password, setConfirmPassword }) => {\r\n  const [confirmPassword, setConfirmPasswordState] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    const newPassword = e.target.value;\r\n    setConfirmPasswordState(newPassword);\r\n\r\n    if (newPassword !== password) {\r\n      setError('Passwords do not match.');\r\n    } else {\r\n      setError('');\r\n      setConfirmPassword(newPassword); // Call the prop function to set the confirm password in the parent component\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-2\">\r\n      <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirm Password:</label>\r\n      <input \r\n        type=\"password\" \r\n        className=\"form-control\" \r\n        id=\"confirmPassword\" \r\n        name=\"confirmPassword\" \r\n        autoComplete=\"off\" \r\n        value={confirmPassword} \r\n        onChange={handleConfirmPasswordChange} \r\n      />\r\n      {error && <div className=\"text-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputConfirmPassword;","import React, { useState } from 'react';\r\nimport Backarrow from '../../../Components/backarrow/Backarrow';\r\nimport InputUserName from '../../../Components/Input_Types/name_input/InputUserName';\r\nimport InputEmail from '../../../Components/Input_Types/email_input/InputEmail';\r\nimport InputPassword from '../../../Components/Input_Types/password_input/InputPassword';\r\nimport InputConfirmPassword from '../../../Components/Input_Types/password_input/InputConfirmPasword';\r\nimport GoogleSignIn from '../../../Components/GoogleSignin/GoogleSignIn';\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from '../firebase';\r\n\r\nconst SignUp = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n  \r\n    const validateInput = () => {\r\n      if (!username ||!email ||!password ||!confirmPassword) {\r\n        alert('Please fill out all fields.');\r\n        return false;\r\n      }\r\n      if (password!== confirmPassword) {\r\n        alert('Passwords do not match.');\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n  \r\n    const handleApiError = (error) => {\r\n      if (error.code === 'auth/email-already-in-use') {\r\n        alert('Email address already in use. Please try a different email address.');\r\n      } else if (error.code === 'auth/invalid-email') {\r\n        alert('Invalid email address.');\r\n      } else {\r\n        console.error(error);\r\n        alert('An error occurred. Please try again later.');\r\n      }\r\n    };\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      if (!validateInput()) return;\r\n  \r\n      try {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n         .then((userCredential) => {\r\n            const user = userCredential.user;\r\n            console.log(user);\r\n          });\r\n      } catch (error) {\r\n        handleApiError(error);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Backarrow />\r\n        <div className=\"d-flex justify-content-center vh-80\">\r\n          <div className=\"d-flex justify-content-center m-auto w-50\">\r\n            <form className=\"m-0\" onSubmit={handleSubmit}>\r\n              <InputUserName setUsername={setUsername} />\r\n              <InputEmail setEmailProp={setEmail} />\r\n              <InputPassword setPassword={setPassword} />\r\n              <InputConfirmPassword password={password} setConfirmPassword={setConfirmPassword} />\r\n              <button type=\"submit\" style={{ marginTop: '7px', borderRadius: '10px', backgroundColor: '#54BD95', color: '#F8F8FA', border: 'none', width: '210px', padding: '5px', textAlign: 'center' }}>\r\n                Sign Up\r\n              </button>\r\n              <GoogleSignIn />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default SignUp;","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDu3A4rY2xAwYpne4QZgYUI8Rd2GpCDRBQ\",\r\n  authDomain: \"biccas-signin.firebaseapp.com\",\r\n  projectId: \"biccas-signin\",\r\n  storageBucket: \"biccas-signin.appspot.com\",\r\n  messagingSenderId: \"15167569892\",\r\n  appId: \"1:15167569892:web:c33d9f84d57b5f0f4f51f1\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\n\r\nexport { auth };\r\nexport default app;"],"names":["GoogleSignIn","_jsxs","_Fragment","children","_jsx","className","src","width","_ref","setEmailProp","email","setEmail","useState","htmlFor","type","id","name","autoComplete","value","onChange","e","target","setPassword","password","setPasswordState","error","setError","constraints","newPassword","test","style","height","fontSize","Backarrow","navigate","useNavigate","onClick","setUsername","username","setLocalUsername","length","color","setConfirmPassword","confirmPassword","setConfirmPasswordState","SignUp","onSubmit","async","preventDefault","alert","createUserWithEmailAndPassword","auth","then","userCredential","user","console","log","code","handleApiError","InputUserName","InputEmail","InputPassword","InputConfirmPassword","marginTop","borderRadius","backgroundColor","border","padding","textAlign","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth"],"sourceRoot":""}