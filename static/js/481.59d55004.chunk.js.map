{"version":3,"file":"static/js/481.59d55004.chunk.js","mappings":"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","sources":["Components/GoogleSignin/GoogleSignIn.jsx","Components/Input_Types/email_input/InputEmail.jsx","Components/Input_Types/password_input/InputPassword.jsx","Components/backarrow/Backarrow.jsx","pages/components/Login/Login.jsx","pages/components/firebase.js"],"sourcesContent":["import React from 'react'\r\nimport googleSignin from '../../asserts/googleSignin.png';\r\n\r\nconst GoogleSignIn = () => {\r\n  return (\r\n   <>\r\n    <h6 className='m-4 mb-2'> -- or continue with Google --</h6>\r\n  <img className='ms-4 align-content-center' src= {googleSignin} width =\" 200px\"/>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default GoogleSignIn;","import React,{useState} from 'react'\r\n\r\nconst InputEmail = ({ setEmailProp}) => {\r\n\r\n   const [email, setEmail] = useState('');\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n        setEmailProp(e.target.value);\r\n        \r\n      };\r\n\r\n  return (\r\n      <>\r\n  <div className=\"mb-2\">\r\n    <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n    <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" autoComplete=\"off\" value={email} onChange={handleEmailChange} />\r\n  </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default InputEmail;","import React, { useState } from 'react';\r\n\r\nconst InputPassword = ({ setPassword }) => {\r\n  const [password, setPasswordState] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const constraints = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$`!%*?&])[A-Za-z\\d@$`!%*?&]{8,12}$/;\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const newPassword = e.target.value;\r\n    setPasswordState(newPassword);\r\n\r\n    if (!constraints.test(newPassword)) {\r\n      setError('Password must be 8-10 characters long and include at least one lowercase letter, one uppercase letter, one numeric digit, and one special character.');\r\n    } else {\r\n      setError('');\r\n      setPassword(newPassword); // Call the prop function to set the password in the parent component\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-2\">\r\n        <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n        <input \r\n          type=\"password\" \r\n          className=\"form-control\" \r\n          id=\"password\" \r\n          name=\"password\" \r\n          autoComplete=\"off\" \r\n          value={password} \r\n          onChange={handlePasswordChange} \r\n        />\r\n      </div>\r\n      {error && <div className=\"text-danger\"style={{width:'300px',height:'55px',fontSize:'13px'}}>{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputPassword;","import React from 'react'\r\nimport {useNavigate } from 'react-router-dom';\r\nimport './backarrow.css'\r\n\r\n\r\n\r\nconst Backarrow = () => {\r\n   const navigate= useNavigate() ;\r\n      \r\n  return (\r\n    \r\n        <div>\r\n       <button className=\"iconi\" onClick={()=>{navigate(-1)}}><span className=\"material-symbols-outlined\">arrow_back</span></button>\r\n        </div>\r\n      );\r\n    \r\n    \r\n  \r\n}\r\n\r\nexport default Backarrow;","import React, { useState } from 'react';\r\nimport Backarrow from '../../../Components/backarrow/Backarrow';\r\nimport InputEmail from '../../../Components/Input_Types/email_input/InputEmail';\r\nimport InputPassword from '../../../Components/Input_Types/password_input/InputPassword';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\nimport GoogleSignIn from '../../../Components/GoogleSignin/GoogleSignIn';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    if (!email || !password) {\r\n      alert('Please fill out all fields.');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      const user = auth.currentUser;\r\n      console.log(user.email + ' logged in successfully');\r\n  \r\n      // Clear form inputs after successful login\r\n      setEmail('');\r\n      setPassword('');\r\n  \r\n      // Redirect or show success message as needed\r\n      alert('Login successful!');\r\n    } catch (error) {\r\n \r\n  \r\n      if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\r\n        alert('Invalid email or password. Please try again.');\r\n      } else {\r\n        alert('Login failed. Please try again later.');\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Backarrow />\r\n      <div className=\"d-flex justify-content-center vh-90\">\r\n        <div className=\"d-flex justify-content-center m-auto w-50\">\r\n          <form className=\"m-0\" onSubmit={handleSubmit}>\r\n            <InputEmail setEmailProp={setEmail} />\r\n            <InputPassword setPassword={setPassword} />\r\n            <button\r\n              className=\"m-3\"\r\n              type=\"submit\"\r\n              style={{\r\n                alignContent: 'center',\r\n                borderRadius: '10px',\r\n                backgroundColor: '#54BD95',\r\n                color: '#F8F8FA',\r\n                border: 'none',\r\n                width: '200px',\r\n                padding: '5px',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              Login\r\n            </button>\r\n            <GoogleSignIn />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDu3A4rY2xAwYpne4QZgYUI8Rd2GpCDRBQ\",\r\n  authDomain: \"biccas-signin.firebaseapp.com\",\r\n  projectId: \"biccas-signin\",\r\n  storageBucket: \"biccas-signin.appspot.com\",\r\n  messagingSenderId: \"15167569892\",\r\n  appId: \"1:15167569892:web:c33d9f84d57b5f0f4f51f1\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\n\r\nexport { auth };\r\nexport default app;"],"names":["GoogleSignIn","_jsxs","_Fragment","children","_jsx","className","src","width","_ref","setEmailProp","email","setEmail","useState","htmlFor","type","id","name","autoComplete","value","onChange","e","target","setPassword","password","setPasswordState","error","setError","constraints","newPassword","test","style","height","fontSize","Backarrow","navigate","useNavigate","onClick","Login","onSubmit","async","preventDefault","signInWithEmailAndPassword","auth","user","currentUser","console","log","alert","code","InputEmail","InputPassword","alignContent","borderRadius","backgroundColor","color","border","padding","textAlign","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth"],"sourceRoot":""}